using BitMiracle.LibTiff.Classic;
using NUnit.Framework;
using SciTIF.Tests.ImageValidation;
using System;
using System.Collections.Generic;
using System.Drawing.Drawing2D;
using System.Formats.Asn1;
using System.IO;
using System.Linq;

namespace SciTIF.Tests;

/// <summary>
/// Test dimensions and pixel values from sample data against that generated by ImageJ (source of truth)
/// </summary>
internal class ImageValidationTests
{
    [Test]
    public void Test_ImageDatabase_ContainsEverySampleImage()
    {
        ImageDatabase db = new(SampleData.DataInfoFile);
        Assert.That(db.Count, Is.Not.Zero);

        foreach (string tifPath in SampleData.TifFiles)
        {
            string title = Path.GetFileName(tifPath);
            Assert.That(db.Infos, Contains.Key(title));
        }
    }

    [Test]
    public void Test_SampleImage_Dimensions()
    {
        ImageDatabase db = new(SampleData.DataInfoFile);

        foreach (string tifPath in SampleData.TifFiles)
        {
            Console.WriteLine(Path.GetFileName(tifPath));
            ImageInfo known = db.Infos[Path.GetFileName(tifPath)];
            TifFile tif = new(tifPath);
            Assert.That(tif.Width, Is.EqualTo(known.Width));
            Assert.That(tif.Height, Is.EqualTo(known.Height));
            Assert.That(tif.Frames, Is.EqualTo(known.Frames));
            Assert.That(tif.Slices, Is.EqualTo(known.Slices));
            Assert.That(tif.Channels, Is.EqualTo(known.Channels));
        }
    }

}
